package fu.swp.evcs.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import fu.swp.evcs.dto.CreateGroupRequest;
import fu.swp.evcs.entity.User;
import fu.swp.evcs.service.GroupJoinService;
import fu.swp.evcs.service.GroupService;
import lombok.RequiredArgsConstructor;

/**
 * ‚úÖ GroupController - Clean controller, ch·ªâ g·ªçi service
 * 
 * Controller KH√îNG ch·ª©a logic, ch·ªâ:
 * 1. Nh·∫≠n request + @AuthenticationPrincipal User
 * 2. G·ªçi service (service x·ª≠ l√Ω validation + logic)
 * 3. Return response (1 d√≤ng duy nh·∫•t)
 */
@RestController
@RequestMapping("/api/groups")
@RequiredArgsConstructor
public class GroupController {

    private final GroupService groupService;
    private final GroupJoinService groupJoinService;

    /**
     * üü¢ T·∫°o nh√≥m chia s·∫ª xe
     */
    @PostMapping("/create")
    public ResponseEntity<String> createGroup(
            @RequestBody CreateGroupRequest request,
            @AuthenticationPrincipal User currentUser) {
        return ResponseEntity.ok(groupService.createGroup(request, currentUser));
    }

    /**
     * üü° G·ª≠i y√™u c·∫ßu tham gia nh√≥m
     */
    @PostMapping("/{groupId}/join")
    public ResponseEntity<String> requestJoinGroup(
            @PathVariable Long groupId,
            @AuthenticationPrincipal User currentUser) {
        return ResponseEntity.ok(groupJoinService.requestJoinGroup(groupId, currentUser));
    }
}
